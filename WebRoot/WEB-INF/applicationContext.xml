<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="  
            http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd  
            http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.0.xsd  
            http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.0.xsd  
            http://www.springframework.org/schema/context 
            http://www.springframework.org/schema/context/spring-context-3.0.xsd">

	<aop:aspectj-autoproxy proxy-target-class="true" />


	<!-- 数据库连接池 -->
	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource"
		destroy-method="close">
		<property name="driverClassName">
			<value>com.mysql.jdbc.Driver</value>
		</property>

		<property name="url">
			<value>jdbc:mysql://localhost:3306/wechat</value>
		</property>

		<property name="username">
			<value>root</value>
		</property>

		<property name="password">
			<value>jiansheng</value>
		</property>
	</bean>

	<!-- SessionFactory注入 -->
	<bean id="sessionFactory"
		class="org.springframework.orm.hibernate3.LocalSessionFactoryBean">
		<property name="dataSource">
			<ref local="dataSource" />
		</property>

		<property name="mappingResources">
			<list>
				<value>info/linsword20/todo/bean/Task.hbm.xml</value>
				<value>info/linsword20/todo/bean/User.hbm.xml</value>
				<value>info/linsword20/weather/bean/CityInfo.hbm.xml</value>
				<value>info/linsword20/log/bean/Log.hbm.xml</value>
			</list>
		</property>

		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.dialect">
					org.hibernate.dialect.MySQLDialect
				</prop>

				<prop key="hibernate.show_sql">true</prop>
			</props>
		</property>
	</bean>

	<!-- transactionManager事务管理 -->
	<bean id="transactionManager"
		class="org.springframework.orm.hibernate3.HibernateTransactionManager">
		<property name="sessionFactory" ref="sessionFactory"></property>
	</bean>

	<!--
		***************************************************************微信*****************************************************
	-->

	<!-- 回复Text类型消息处理类 -->
	<bean id="textResponseService"
		class="info.linsword20.wechat.service.impl.TextResponseServiceImpl"
		scope="singleton">
		<property name="task4WechatService" ref="task4WechatService"></property>
	</bean>

	<!-- 回复News类型消息处理类 -->
	<bean id="newsResponseService"
		class="info.linsword20.wechat.service.impl.NewsResponseServiceImpl"
		scope="singleton">
		<property name="weatherService" ref="weacherService"></property>
	</bean>

	<!-- 消息处理类 -->
	<bean id="msgProcessService"
		class="info.linsword20.wechat.service.impl.MsgProcessServiceImpl"
		scope="singleton">
		<property name="textResponserService" ref="textResponseService"></property>
		<property name="newsResponseService" ref="newsResponseService"></property>
	</bean>


	<!-- action -->
	<bean id="wechataction" class="info.linsword20.wechat.action.WechatAction"
		scope="prototype">
		<property name="msgProcessService" ref="msgProcessService"></property>
	</bean>

	<!--
		***************************************************************天气查询***********************************************
	-->

	<!-- 天气查询DAO层 -->
	<bean id="cityInfoDao" class="info.linsword20.weather.dao.impl.CityInfoDAOImpl"
		scope="singleton">
		<property name="sessionFactory" ref="sessionFactory"></property>
	</bean>

	<!-- 天气查询Service层 -->
	<bean id="weacherServiceTarget" class="info.linsword20.weather.service.impl.WeatherServiceImpl"
		scope="singleton">
		<property name="cityInfoDao" ref="cityInfoDao"></property>
	</bean>
	
	<bean id="weacherService"
		class="org.springframework.transaction.interceptor.TransactionProxyFactoryBean">
		<property name="target" ref="weacherServiceTarget"></property>
		<property name="transactionManager" ref="transactionManager"></property>
		<property name="transactionAttributes">
			<props>
				<prop key="*">PROPAGATION_REQUIRED</prop>
			</props>
		</property>
	</bean>
	


	<!--
		***************************************************************待办事项*****************************************************************
	-->

	<!-- Tasks持久化层 -->

	<bean id="taskDao" class="info.linsword20.todo.dao.task.impl.TaskDAOImpl"
		scope="singleton">
		<property name="sessionFactory" ref="sessionFactory"></property>
	</bean>


	<!-- Tasks Service层 -->

	<bean id="taskServiceTarget" class="info.linsword20.todo.service.task.impl.TaskServiceImpl"
		scope="singleton">
		<property name="taskDao" ref="taskDao"></property>
	</bean>

	<bean id="taskService"
		class="org.springframework.transaction.interceptor.TransactionProxyFactoryBean">
		<property name="target" ref="taskServiceTarget"></property>
		<property name="transactionManager" ref="transactionManager"></property>
		<property name="transactionAttributes">
			<props>
				<prop key="*">PROPAGATION_REQUIRED</prop>
			</props>

		</property>
	</bean>


	<!-- Tasks Action-->
	<bean id="saveTaskAction" class="info.linsword20.todo.action.task.SaveTaskAction"
		scope="prototype">
		<property name="taskService" ref="taskService"></property>
	</bean>

	<bean id="listTaskAction" class="info.linsword20.todo.action.task.ListTaskAction"
		scope="prototype">
		<property name="tasksService" ref="taskService"></property>
	</bean>

	<bean id="markTaskAction" class="info.linsword20.todo.action.task.MarkTaskAction">
		<property name="tasksService" ref="taskService"></property>
	</bean>

	<bean id="deleteTaskAction" class="info.linsword20.todo.action.task.DeleteTaskAction"
		scope="prototype">
		<property name="taskService" ref="taskService"></property>
	</bean>

	<bean id="alterTaskAction" class="info.linsword20.todo.action.task.AlterTaskAction"
		scope="prototype">
		<property name="taskService" ref="taskService"></property>
	</bean>

	<bean id="updateTaskAction" class="info.linsword20.todo.action.task.UpdateTaskAction"
		scope="prototype">
		<property name="taskService" ref="taskService"></property>
	</bean>

	<bean id="addTaskAction" class="info.linsword20.todo.action.task.AddTaskAction"
		scope="prototype"></bean>



	<!--
		*************************************************Task4wechatService层***************************************************
	-->
	<bean id="task4WechatServiceTarget"
		class="info.linsword20.todo.service.task.impl.Task4WechatServiceImpl"
		scope="singleton">
		<property name="taskDao" ref="taskDao"></property>
		<property name="userDao" ref="userDao"></property>
	</bean>

	<bean id="task4WechatService"
		class="org.springframework.transaction.interceptor.TransactionProxyFactoryBean">
		<property name="target" ref="task4WechatServiceTarget"></property>
		<property name="transactionManager" ref="transactionManager"></property>
		<property name="transactionAttributes">
			<props>
				<prop key="*">PROPAGATION_REQUIRED</prop>
			</props>
		</property>
	</bean>



	<!--
		***************************************************************用户管理*****************************************************
	-->
	<!-- 用户DAO层 -->
	<bean id="userDao" class="info.linsword20.todo.dao.user.impl.UserDAOImpl"
		scope="singleton">
		<property name="sessionFactory" ref="sessionFactory"></property>
	</bean>

	<!-- 用户Service层 -->
	<bean id="userServiceTarget" class="info.linsword20.todo.service.user.impl.UserServiceImpl"
		scope="singleton">
		<property name="userDao" ref="userDao"></property>
	</bean>

	<bean id="userService"
		class="org.springframework.transaction.interceptor.TransactionProxyFactoryBean">
		<property name="target" ref="userServiceTarget"></property>
		<property name="transactionManager" ref="transactionManager"></property>
		<property name="transactionAttributes">
			<props>
				<prop key="*">PROPAGATION_REQUIRED</prop>
			</props>
		</property>
	</bean>

	<!-- 用户Action层 -->
	<bean id="userLoginAction" class="info.linsword20.todo.action.user.UserLoginAction"
		scope="prototype">
		<property name="userService" ref="userService"></property>
	</bean>

	<bean id="adminLoginAction" class="info.linsword20.todo.action.user.AdminrLoginAction"
		scope="prototype">
		<property name="userService" ref="userService"></property>
	</bean>

	<bean id="userRegisterAction" class="info.linsword20.todo.action.user.UserRegisterAction"
		scope="prototype">
		<property name="userService" ref="userService"></property>
	</bean>

	<bean id="registerAction" class="info.linsword20.todo.action.user.RegisterAction"
		scope="singleton"></bean>


	<bean id="listUserAction" class="info.linsword20.todo.action.user.ListUserAction"
		scope="prototype">
		<property name="userService" ref="userService"></property>
	</bean>

	<bean id="removeUserAction" class="info.linsword20.todo.action.user.RemoveUserAction"
		scope="prototype">
		<property name="userService" ref="userService"></property>
	</bean>

	<bean id="alterUserAction" class="info.linsword20.todo.action.user.AlterUserAction"
		scope="prototype">
		<property name="userService" ref="userService"></property>
	</bean>


	<!-- 用户AOP -->
	<bean id="userLoginAspect" class="info.linsword20.todo.action.user.UserLoginAspect"
		scope="prototype">
		<property name="userService" ref="userService"></property>
	</bean>

	<bean id="AdminLoginAspect" class="info.linsword20.todo.action.user.AdminLoginAspect"
		scope="prototype">
		<property name="userService" ref="userService"></property>
	</bean>


	<!--
		***************************************************************日志***********************************************
	-->
	<!-- 日志DAO层 -->
	<bean id="logDao" class="info.linsword20.log.dao.LogDAOImpl"
		scope="singleton">
		<property name="sessionFactory" ref="sessionFactory"></property>
	</bean>

	<bean id="logAspect" class="info.linsword20.log.action.LogAspect"
		scope="prototype">
		<property name="logDao" ref="logDao"></property>
	</bean>

	<bean id="showLogAction" class="info.linsword20.log.action.ShowLogAction"
		scope="prototype">
		<property name="logDao" ref="logDao"></property>
	</bean>

</beans>